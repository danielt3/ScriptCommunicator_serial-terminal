ScriptPlotWindow::setEnabled(bool isEnabled):void \nEnables or disables the widget.
ScriptPlotWindow::update(void):void \nUpdates the widget.
ScriptPlotWindow::repaint(void):void \nRepaints the widget.
ScriptPlotWindow::show(void):void \nShows the widget.
ScriptPlotWindow::close(void):void \nCloses the widget.
ScriptPlotWindow::hide(void):void \nHides the widget.
ScriptPlotWindow::setWindowTitle(String title)_void \nSets the window title.
ScriptPlotWindow::windowPositionAndSize(void):String \nReturns the window size and position (Pixel).The return string has following format:\n"top left x, top left y, width, height"
ScriptPlotWindow::setWindowPositionAndSize(String positionAndSize):void \nSets the position and the size of a window). String format:\n"top left x, top left y, width, height".
ScriptPlotWindow::setBackgroundColor(String color):void \nSets the background color of a script gui element. Possible colors are:\nblack, white, gray, red, green, blue, cyan, magenta and yellow.
ScriptPlotWindow::setWindowTextColor(String color):void \nSets the window text color of a script gui element. Possible colors are:\nblack, white, gray, red, green, blue, cyan, magenta and yellow.
ScriptPlotWindow::setTextColor(String color):void \nSets the text color of a script gui element. Possible colors are:\nblack, white, gray, red, green, blue, cyan, magenta and yellow.
ScriptPlotWindow::setPaletteColor(String palette, String color):void \nSets a palette color of a script gui element.\nPossible palette values are: Base, Foreground, Background, WindowText, Window, Text and ButtonText.\nPossible colors are: black, white, gray, red, green, blue, cyan, magenta and yellow.
ScriptPlotWindow::setPaletteColorRgb(Number red, Number green, Number blue, String palette):void \nSets a palette color of a script gui element. Possible palette values are:\nBase, Foreground, Background, WindowText, Window, Text and ButtonText.
ScriptPlotWindow::setToolTip(String text, Number duration):void \nSets the tool tip of the script gui element.\nIf the duration is -1 (default) the duration is calculated depending on the length of the tool tip.
ScriptPlotWindow::isVisible(void):bool \nReturn true, if the widget is visible.
ScriptPlotWindow::raise(void):void \nRaises this widget to the top of the parent widget's stack.
ScriptPlotWindow::lower(void):void \nLowers the widget to the bottom of the parent widget's stack.
ScriptPlotWindow::setWindowFlags(Number flags):void \nSets the window flags.\nNote: ScriptWidget::show must be called after a setWindowFlags call.
ScriptPlotWindow::clearWindowFlags(Number flags):void \nClears the given window flags.\nNote: ScriptWidget::show must be called after a clearWindowFlags call.
ScriptPlotWindow::windowFlags(void):Number \nReturns the window flags.
ScriptPlotWindow::setFocus(void):void \nGives the keyboard input focus to this widget.
ScriptPlotWindow::width(void):Number \nReturns the width of the widget excluding any window frame.
ScriptPlotWindow::height(void):Number \nReturns the height of the widget excluding any window frame.
ScriptPlotWindow::getWidgetPointer(void):QWidget* \nReturns the widget pointer.
ScriptPlotWindow::setAdditionalData(Number key, String data):void \nSets/stores an additional data entry.
ScriptPlotWindow::getAdditionalData(Number key):String \nReturns an additional data entry.
ScriptPlotWindow::blockSignals(bool block):bool \nIf block is true, signals emitted by this object are blocked\n(i.e., emitting a signal will not invoke anything connected to it).\nIf block is false, no such blocking will occur.\nThe return value is the previous value of the blocking state.
ScriptPlotWindow::getClassName(void):String \nReturns the class name of this object.
ScriptPlotWindow::getObjectName(void):String \nReturns the name of this object (UI_'object name in the ui file').\nNote: This function returns only a not empty string for GUI elements from ui files\nor if the function setObjectName has been called for the current object.
ScriptPlotWindow::setObjectName(String name):void \nSets the name of the current object (can be retrieved with getObjectName).
ScriptPlotWindow::addGraph(String color, String penStyle, String name):Number \nThis function adds a graph to the diagram.
ScriptPlotWindow::setInitialAxisRanges(Number xRange, Number yMinValue, Number ymaxValue):void \nThis function sets the initial ranges of the diagram.
ScriptPlotWindow::addDataToGraph(Number graphIndex, Number x, Number y):void \nThis function adds one point to a graph.
ScriptPlotWindow::setAxisLabels(String xAxisLabel, String yAxisLabel):void \nSets the axis label.
ScriptPlotWindow::showLegend(bool show):void \nThis function shows or hides the diagram legend.
ScriptPlotWindow::clearGraphs(void):void \nThis function clears the data of all graphs.
ScriptPlotWindow::removeAllGraphs(void):void \nThis function removes all graphs.
ScriptPlotWindow::showHelperElements(bool showXRange, bool showYRange, bool showUpdate, bool showSave, bool showLoad, bool showClear, bool showGraphVisibility, Number graphVisibilityMaxSize=80, bool showLegend=true):void \nSets the visibility of several plot widget elements.
ScriptPlotWindow::setMaxDataPointsPerGraph(Number maxDataPointsPerGraph):void \nSets tThe max. number of data points per graph (the default is 10.000.000).
ScriptPlotWindow::setUpdateInterval(Number updateInterval):void \nSets the update-interval.
ScriptPlotWindow::setWindowIcon(String iconFile, bool isRelativePath=true):void \nSets the window icon of a dialog or a main window.\nSupported formats: .ico, .gif, .png, .jpeg, .tiff, .bmp, .icns.
ScriptPlotWindow::plotMousePressSignal.connect(Number xValue, Number yValue, Number mouseButton) \nIs emitted if the user press a mouse button inside the plot.\nNote: mouseButton has the type Qt::MouseButton.
ScriptPlotWindow::clearButtonPressedSignal.connect(void) \nIs emitted if the user clicks the clear button.
ScriptPlotWindow::closedSignal.connect(void) \nThis signal is emitted if the plot window has been closed.